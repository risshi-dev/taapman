{"version":3,"sources":["forecast.js","App.js","serviceWorker.js","index.js"],"names":["Forecast","props","t","main","map","item","push","parseInt","temp","d","description","moment","add","format","weather","className","App","useState","x","setX","y","setY","dis","setDis","f","setF","input","setInput","data","sys","setData","dt_txt","fore","setFore","showPosition","position","parseFloat","coords","latitude","longitude","search","event","keyCode","which","type","fetch","then","res","json","list","id","useEffect","navigator","onLine","alert","geolocation","getCurrentPosition","placeholder","value","onChange","e","target","onKeyPress","disabled","onClick","style","marginTop","fontSize","name","country","fontWeight","textShadow","marginRight","temp_max","temp_min","fontVariant","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d1d4e0f6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\nfunction Forecast(props) {\r\n  const t = [];\r\n  props.props.main.map((item) => t.push(parseInt(item.temp)));\r\n  const data = [\r\n    [\r\n      props.props.description[0],\r\n      moment().add(1, \"days\").format(\"D MMM\"),\r\n      t[0],\r\n      props.props.weather[0],\r\n    ],\r\n    [\r\n      props.props.description[1],\r\n      moment().add(2, \"days\").format(\"D MMM\"),\r\n      t[1],\r\n      props.props.weather[1],\r\n    ],\r\n    [\r\n      props.props.description[2],\r\n      moment().add(3, \"days\").format(\"D MMM\"),\r\n      t[2],\r\n      props.props.weather[2],\r\n    ],\r\n    [\r\n      props.props.description[3],\r\n      moment().add(4, \"days\").format(\"D MMM\"),\r\n      t[3],\r\n      props.props.weather[3],\r\n    ],\r\n    [\r\n      props.props.description[4],\r\n      moment().add(5, \"days\").format(\"D MMM\"),\r\n      t[4],\r\n      props.props.weather[4],\r\n    ],\r\n  ];\r\n  const d = data.map((item) => (\r\n    <div className=\"forecard\">\r\n      <div className=\"time\">{item[1]}</div>{\" \"}\r\n      <div>\r\n        <i className={`owf owf-${item[0]} ic`}></i>\r\n      </div>\r\n      <div className=\"clouds\">{item[3]}</div>\r\n      <div className=\"tmp\">\r\n        {item[2]}\r\n        Â°C\r\n      </div>\r\n    </div>\r\n  ));\r\n  return (\r\n    <div className=\"con\">\r\n      <div className=\"co\">{d}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Forecast;\r\n","import React, { useEffect, useState } from \"react\";\nimport Forecast from \"./forecast\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport moment from \"moment\";\nimport \"./App.css\";\nimport \"./mobile.css\";\nfunction App() {\n  const [x, setX] = useState(\"\");\n  const [y, setY] = useState(\"\");\n  const [dis, setDis] = useState(false);\n  const [f, setF] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [data, setData] = useState({\n    main: {},\n    data: {},\n    weather: {},\n    sys: {},\n  });\n  const [fore, setFore] = useState({\n    main: [],\n    dt_txt: [],\n    description: [],\n    weather: [],\n  });\n  function online() {\n    if (navigator.onLine === false) alert(\"You're Offline\");\n  }\n  useEffect(() => {\n    online();\n  }, []);\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(showPosition);\n  }, []);\n  function showPosition(position) {\n    setX(parseFloat(position.coords.latitude));\n    setY(parseFloat(position.coords.longitude));\n  }\n  function find() {\n    fetch(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${x}&lon=${y}&APPID=7e701848cc7069512b1d4c76cf8c8523&units=metric`\n    )\n      .then((data) => data.json())\n      .then((data) =>\n        setData({\n          main: data.main,\n          data: data,\n          weather: data.weather[0],\n          sys: data.sys,\n        })\n      )\n      .then(setDis(true));\n\n    fetch(\n      `https://api.openweathermap.org/data/2.5/forecast?lat=${x}&lon=${y}&appid=7e701848cc7069512b1d4c76cf8c8523&units=metric`\n    )\n      .then((res) => res.json())\n      .then((res) =>\n        setFore({\n          main: [\n            res.list[10].main,\n            res.list[18].main,\n            res.list[26].main,\n            res.list[34].main,\n            res.list[39].main,\n          ],\n          dt_txt: [\n            res.list[10].dt_txt,\n            res.list[18].dt_txt,\n            res.list[26].dt_txt,\n            res.list[34].dt_txt,\n            res.list[39].dt_txt,\n          ],\n          description: [\n            res.list[10].weather[0].id,\n            res.list[18].weather[0].id,\n            res.list[26].weather[0].id,\n            res.list[34].weather[0].id,\n            res.list[39].weather[0].id,\n          ],\n          weather: [\n            res.list[10].weather[0].main,\n            res.list[18].weather[0].main,\n            res.list[26].weather[0].main,\n            res.list[34].weather[0].main,\n            res.list[39].weather[0].main,\n          ],\n        })\n      )\n      .then(setF(true));\n  }\n\n  function search(event) {\n    var code = event.keyCode || event.which;\n\n    if (code === 13 || event.type === \"click\") {\n      fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${input}&appid=7e701848cc7069512b1d4c76cf8c8523&units=metric`\n      )\n        .then((res) => res.json())\n        .then((data) =>\n          setData({\n            main: data.main,\n            data: data,\n            weather: data.weather[0],\n            sys: data.sys,\n          })\n        )\n        .then(setDis(true))\n        .then(setInput(\"\"));\n\n      fetch(\n        `https://api.openweathermap.org/data/2.5/forecast?q=${input}&appid=7e701848cc7069512b1d4c76cf8c8523&units=metric`\n      )\n        .then((res) => res.json())\n        .then((res) =>\n          setFore({\n            main: [\n              res.list[10].main,\n              res.list[18].main,\n              res.list[26].main,\n              res.list[34].main,\n              res.list[39].main,\n            ],\n            dt_txt: [\n              res.list[10].dt_txt,\n              res.list[18].dt_txt,\n              res.list[26].dt_txt,\n              res.list[34].dt_txt,\n              res.list[39].dt_txt,\n            ],\n            description: [\n              res.list[10].weather[0].id,\n              res.list[18].weather[0].id,\n              res.list[26].weather[0].id,\n              res.list[34].weather[0].id,\n              res.list[39].weather[0].id,\n            ],\n            weather: [\n              res.list[10].weather[0].main,\n              res.list[18].weather[0].main,\n              res.list[26].weather[0].main,\n              res.list[34].weather[0].main,\n              res.list[39].weather[0].main,\n            ],\n          })\n        )\n        .then(setF(true));\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Taapman</h1>\n\n      <div id=\"input\">\n        <div>\n          <input\n            id=\"in\"\n            placeholder=\"Enter City...\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyPress={search}\n          ></input>\n          <button disabled={input === \"\"} onClick={search}>\n            Search\n          </button>\n          <button onClick={find} disabled={input !== \"\"}>\n            Auto\n          </button>\n        </div>\n      </div>\n      <div style={{ marginTop: \"3rem\" }}>\n        {dis === true ? (\n          <div className=\"card\">\n            <div id=\"shadow\">\n              <div id=\"date\">\n                <span id=\"da\">{moment().format(\"dddd\")}</span>{\" \"}\n                <span>{moment().format(\"D MMM \")}</span>\n              </div>\n              <div className=\"cont\">\n                <div id=\"city\">\n                  <h2 style={{ fontSize: \"1.4rem\" }}>\n                    {`${data.data.name}, ${data.sys.country}`}\n                  </h2>\n                  <div\n                    style={{\n                      fontSize: \"5rem\",\n                      fontWeight: \"700\",\n                      textShadow: \"5px 5px 14px #000\",\n                    }}\n                  >\n                    {parseInt(data.main.temp)}\n                    <span style={{ fontSize: \"4.5rem\" }}>Â°C</span>\n                  </div>\n                </div>\n                <div id=\"ico\">\n                  <div>\n                    <i className={`owf owf-${data.weather.id} icon`}></i>\n                  </div>\n                  <div id=\"info\">\n                    <div style={{ marginRight: \"1rem\" }}>\n                      <ArrowUpwardIcon></ArrowUpwardIcon>\n                      {parseInt(data.main.temp_max)}{\" \"}\n                    </div>\n                    <div style={{ marginRight: \"1rem\" }}>\n                      <ArrowDownwardIcon></ArrowDownwardIcon>\n                      {parseInt(data.main.temp_min)}{\" \"}\n                    </div>\n                    <div style={{ fontVariant: \"all-petite-caps\" }}>\n                      {data.weather.description}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n\n      <div className=\"force\">{f === true ? <Forecast props={fore} /> : \"\"}</div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}